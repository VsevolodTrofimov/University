#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extarticle
\begin_preamble
\usepackage{indentfirst}
\usepackage{hyperref}
\end_preamble
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
theorems-ams-bytype
theorems-sec-bytype
algorithm2e
\end_modules
\maintain_unincluded_children false
\language russian
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 1.5cm
\rightmargin 2.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0.7cm
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Дисклеймер.
\end_layout

\begin_layout Standard
Автор не несет ответственности за любой ущерб, причиненный Вам при использовании
 данного документа.
 Автор напоминает, что данный документ может содержать ошибки и опечатки,
 недостоверную и/или непроверенную информацию.
 Если Вы желаете помочь в развитии проекта или сообщить об ошибке/опечатке/неточ
ности:
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "GitHub проекта"
target "https://github.com/vahriin/University"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "Автор в ВК"
target "https://vk.com/vahriin"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Введение.
 История развития компьютерных сетей.
\end_layout

\begin_layout Standard
Прародителем современных компьютерных сетей считаются телефонные сети.
 Еще при первых попытках создать компьютерную сеть, узлы которой были бы
 отдалены друг от друга на значительное расстояние, использовались телефонные
 линии, которые, однако, не могли обеспечить должное качество и скорость
 соединения.
\end_layout

\begin_layout Standard
Необходимость в сетях подобного рода возникла еще в 50-х годах прошлого
 века.
 Примерно в это время были предприняты первые попытки объединить в сеть
 несколько удаленных компьютеров.
 Однако наибольший толчок развитию сетей дало решение министерства обороны
 США о создании системы раннего оповещения о ракетной атаке со стороны СССР.
 Так как наблюдательные и радиолокационные пункты были разбросаны по всей
 стране, возникла необходимость в сети, способной быстро передавать информацию.
 В 1962 году Джордж Ликлайдер из Массачусетского университета выступает
 с серией заметок о социальном взаимодействии при помощи компьютерных сетей.
 В этом же году его приглашают на должнось первого руководителя исследовательско
го компьютерного проекта при Министерстве обороны США.
 Реализовывался этот проект на базе DARPA (Defense Advanced Research Projects
 Agency) — агентства передовых оборонных исследовательских проектов.
\end_layout

\begin_layout Standard
Так в конце 1969 года увидела свет первая компьютерная сеть APRANet, состоящая
 всего из 4-х компьютеров.
 В основе этой сети лежала идея пакетной коммутации, предложенная еще Полом
 Бэреном в середине 50-х годов.
 В течении последующих пяти лет к APRANet были подключены еще несколько
 сотен компьютеров.
\end_layout

\begin_layout Standard
Параллельно развивались другие проекты сетей, однако препятствием между
 их совместной работой было то, что все они работали по-разному.
 Встала острая необходимость в едином протоколе, который позволил бы общаться
 разным компьютерам и сетям совместно.
 И в 1983 году той же компанией DAPRA был разработан протокол TCP/IP, который
 был признан стандартным протоколом для построения сетей.
 Машины APRANet были переведены на него в том же году.
 
\end_layout

\begin_layout Standard
Процесс объединения сетей ускорялся с каждым годом, и появление персональных
 компьютеров лишь подстегнуло его.
 Был разработан стандарт OSI, повышалась скорость соединения и в результате
 мы имеем то, что имеем - Интернет.
\end_layout

\begin_layout Section
Деление компьютерных сетей (территориальное, среда передачи данных, архитектура)
\end_layout

\begin_layout Standard
По своей природе компьютерные сети подразделяются по территориальному признаку,
 среде передачи данных и архитектуре.
 Рассмотрим подробнее все три способа деления.
\end_layout

\begin_layout Standard

\series bold
Территориальное
\series default
 деление подразумевает деление на 
\series bold
глобальные
\series default
 и 
\series bold
локальные
\series default
 сети.
 
\end_layout

\begin_layout Enumerate
Примером 
\series bold
глобальной
\series default
 сети может служить Интернет или сеть мобильной связи стандарта GSM.
 Отличие глобальной сети от прочих в том, что она охватывает всю Землю.
 Построение подобной сети — очень ресурсоемкий процесс, требующий объединения
 усилий большинства стран на Земле.
\end_layout

\begin_layout Enumerate

\series bold
Локальные
\series default
 сети же подразумевают охват лишь небольшого участка земной поверхности.
 Размеры локальных сетей могут быть различны: начиная от локальных сетей,
 построенных внутри одной квартиры и заканчивая сетями, объединяющими несколько
 городов.
 Локальные сети очень распространены и являются обязательным условием работы
 крупных и не очень фирм.
\end_layout

\begin_layout Standard
По 
\series bold
среде передачи данных
\series default
 сети делятся на:
\end_layout

\begin_layout Enumerate

\series bold
Проводные
\series default
 сети.
 В сетях такого типа данные передаются посредством использования проводов
 либо кабелей.
 Примерами проводных сетей являются телефонная сеть, витая пара, оптоволокно,
 коаксиал.
\end_layout

\begin_layout Enumerate

\series bold
Беспроводные
\series default
 сети.
 В сетях такого типа данные передаются посредством радио- либо иных волн.
 Примеры: Wi-Fi, Li-Fi, Bluetooth, спутниковая, сотовая, радиосвязь, инфракрасны
й порт, NFC.
\end_layout

\begin_layout Standard
Архитектура сети — комбинация топологий, методов доступа к среде передачи
 данных и протоколов, необходимых для создания работоспособной сети.
 По архитектурному признаку сети могут различаться:
\end_layout

\begin_layout Enumerate
Топологией
\end_layout

\begin_layout Enumerate
Используемым протоколом
\end_layout

\begin_layout Standard
Топология сети — геометрическая форма и физическое расположение компьютеров
 по отношению к друг другу.
 По топологии можно выделить:
\end_layout

\begin_layout Enumerate
Полносвязные сети (каждый-с-каждым)
\end_layout

\begin_layout Enumerate
Неполносвязные сети.
\end_layout

\begin_layout Section
Проводные и беспроводные сети
\end_layout

\begin_layout Standard
Проводные сети — сети, в которых для передачи данных используются провода,
 кабели.
 Примерами проводных сетей являются:
\end_layout

\begin_layout Enumerate
Телефонная сеть.
 Используется витая пара (состоящая из 4 проводков, свитых попарно, а затем
 эти пары свиты еще раз), либо так называемая 
\begin_inset Quotes fld
\end_inset

лапша
\begin_inset Quotes frd
\end_inset

 — два свитых проводка.
 
\begin_inset Quotes fld
\end_inset

Лапша
\begin_inset Quotes frd
\end_inset

 по определению не является витой парой.
 Скорость передачи данных по витой паре в телефонных сетях составляет 24
 Мбит/с (максимальная скорость для ADSL).
 В данный момент достаточно широко используется, но постепенно выходит из
 употребления.
\end_layout

\begin_layout Enumerate
Витая пара.
 Та же самая витая пара, но имеющая от 4 до 8 проводков.
 Бывает неэкранированная, экранированная и дважды экранированная.
 Экранированная пара представляет собой заключенную в экран витую пару,
 дважды экранированная также имеет экран, в который заключены все витые
 пары.
 Экран представляет собой тонкую фольгу, которая защищает данные от воздействия
 помех.
 Скорость передачи данных до 10 Гбит/с, используется повсеместно.
\end_layout

\begin_layout Enumerate
Оптоволокно.
 Представляет собой кабель из гибкого стекла, покрытого отражающим материалом.
 Передача данных осуществляется посредством высокочастотных световых вспышек.
 Скорость передачи данных — гигабайты в секунду.
 Только начинает свой путь в дома потребителей.
\end_layout

\begin_layout Enumerate
Коаксиал.
 Представляет собой одножильный толстый провод в полиэтиленовой оплетке
 с экраном.
 Использовался ранее для построения локальных сетей.
 Скорость передачи данных составляла до 10 Мбит/с.
 В настоящий момент вытеснен витой парой.
\end_layout

\begin_layout Standard
Беспроводные сети — сети, в которых передача данных осуществляется посредством
 радиосвязи, световых либо инфракрасных волн, магнитного поля.
 Виды сетей:
\end_layout

\begin_layout Enumerate
WiFi (2,4 ГГц, 5 ГГц).
 Используются радиоволны.
 Максимальное расстояние передачи данных, заявленное в спецификации — 300
 метров.
 В условиях зданий — 10-20 метров.
 Скорость данных — до 300 Мбит/с для 5 ГГц.
 Распространен повсеместно.
\end_layout

\begin_layout Enumerate
LiFi.
 Используются световые волны.
 Как следствие, передача возможна лишь в пределах одного помещения.
 Скорость передачи данных — до 1 Гбит/с.
\end_layout

\begin_layout Enumerate
Спутниковая связь.
 Для передачи данных используются радиоволны.
 Дорогая в использовании, однако покрывающая почти всю Землю связь.
 Низкая скорость передачи данных.
 Примеры технологий: GPS, спутниковый телефон.
\end_layout

\begin_layout Enumerate
Инфракрасный порт.
 Используются высокочастотные инфракрасные импульсы.
 Передача данных возможна лишь в условиях прямой видимости.
 Скорость достаточно низкая (Килобиты в секунду).
\end_layout

\begin_layout Enumerate
Bluetooth.
 Используются радиоволны.
 Средняя скорость передачи данных, но невысокая дальность — до 30 метров.
\end_layout

\begin_layout Enumerate
Сотовая связь.
 Радиоволны.
 Дальность 
\begin_inset Formula $\thickapprox20-30$
\end_inset

 км.
 Низкая скорость передачи данных на больших расстояниях, однако возможно
 ее увеличение при небольших.
 Примеры: GSM, 3G, 4G.
\end_layout

\begin_layout Enumerate
Радиосвязь.
 На скорость и дальность передачи данных влияют длина волны и ее частота.
 Используется повсеместно.
\end_layout

\begin_layout Enumerate
Фотоэлемент.
 Вообще непонятная штуковина.
\end_layout

\begin_layout Enumerate
NFC.
 Используется магнитное поле.
 Дальность передачи данных — до 10 см.
 Скорость — килобайты в секунду.
 Используется в метках, бесконтактных картах, проездных, студенческих.
\end_layout

\begin_layout Section
Топология сетей.
\end_layout

\begin_layout Standard

\series bold
Сетевая тополо́гия
\series default
 — это конфигурация графа, вершинам которого соответствуют конечные узлы
 сети (компьютеры) и коммуникационное оборудование (маршрутизаторы), а рёбрам
 — физические или информационные связи между вершинами.
\end_layout

\begin_layout Standard
Топология может быть 
\series bold
полносвязной 
\series default
(рис.
 4.1) — в которой каждый компьютер непосредственно связан со всеми остальными.
 Однако этот вариант громоздкий и неэффективный, потому что каждый компьютер
 в сети должен иметь большое количество коммуникационных портов, достаточное
 для связи с каждым из остальных компьютеров.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Ful_topology.png

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Гораздо удобнее использовать неполносвязные топологии.
 Существует несколько типов такой топологии:
\end_layout

\begin_layout Standard

\series bold
1) Шина 
\series default
(рис.
 4.2)
\series bold
:
\end_layout

\begin_layout Standard
Топология данного типа, представляет собой общий кабель (называемый шина
 или магистраль), к которому подсоединены все рабочие станции.
 На концах кабеля находятся терминаторы, для предотвращения отражения сигнала.
\end_layout

\begin_layout Standard

\series bold
Преимущества
\series default
 сетей шинной топологии:
\end_layout

\begin_layout Itemize
расход кабеля существенно уменьшен отказ одного из узлов не влияет на работу
 сети в целом; 
\end_layout

\begin_layout Itemize
сеть легко настраивать и конфигурировать; 
\end_layout

\begin_layout Itemize
сеть устойчива к неисправностям отдельных узлов.
 
\end_layout

\begin_layout Standard

\series bold
Недостатки
\series default
 сетей шинной топологии:
\end_layout

\begin_layout Itemize
разрыв кабеля может повлиять на работу всей сети; 
\end_layout

\begin_layout Itemize
ограниченная длина кабеля и количество рабочих станций; 
\end_layout

\begin_layout Itemize
недостаточная надежность сети из-за проблем с разъемами кабеля; 
\end_layout

\begin_layout Itemize
низкая производительность, обусловлена разделением канала между всеми абонентами.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Bus_topology.PNG

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
2)
\series default
 В сети, построенной по топологии типа «
\series bold
звезда
\series default
» (рис.
 4.3), каждая рабочая станция подсоединяется кабелем (витой парой) к концентратор
у или хабу (англ.
 hub).
 Концентратор обеспечивает параллельное соединение ПК и, таким образом,
 все компьютеры, подключенные к сети, могут общаться друг с другом.
\end_layout

\begin_layout Standard
Данная топология применяется в локальных сетях с архитектурой 10Base-T Ethernet.
\end_layout

\begin_layout Standard

\series bold
Преимущества
\series default
 сетей топологии звезда:
\end_layout

\begin_layout Itemize
легко подключить новый ПК;
\end_layout

\begin_layout Itemize
имеется возможность централизованного управления;
\end_layout

\begin_layout Itemize
сеть устойчива к неисправностям отдельных ПК и к разрывам соединения отдельных
 ПК.
 
\end_layout

\begin_layout Standard

\series bold
Недостатки
\series default
 сетей топологии звезда:
\end_layout

\begin_layout Itemize
отказ хаба влияет на работу всей сети; 
\end_layout

\begin_layout Itemize
большой расход кабеля.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Star_topology.PNG

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
3)
\series default
 В сети с топологией типа 
\series bold
«кольцо»
\series default
 (рис.
 4.4) все узлы соединены каналами связи в неразрывное кольцо (необязательно
 окружность), по которому передаются данные.
 Выход одного ПК соединяется со входом другого ПК.
 Начав движение из одной точки, данные, в конечном счете, попадают на его
 начало.
 Данные в кольце всегда движутся в одном и том же направлении.
\end_layout

\begin_layout Standard
Принимающая рабочая станция распознает и получает только адресованное ей
 сообщение.
 В сети с топологией типа физическое кольцо используется маркерный доступ,
 который предоставляет станции право на использование кольца в определенном
 порядке.
 Логическая топология данной сети — логическое кольцо.
 Данную сеть очень легко создавать и настраивать.
\end_layout

\begin_layout Standard
К основному недостатку сетей топологии кольцо относится то, что повреждение
 линии связи в одном месте или отказ ПК приводит к неработоспособности всей
 сети.
\end_layout

\begin_layout Standard
Как правило, в чистом виде топология «кольцо» не применяется из-за своей
 ненадёжности, поэтому на практике применяются различные модификации кольцевой
 топологии.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Ring_topology.PNG

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
4) Дерево
\series default
 — это топология сетей, в которой каждый узел более высокого уровня связан
 с узлами более низкого уровня звездообразной связью, образуя комбинацию
 звезд.
 Также дерево называют иерархической звездой.
\end_layout

\begin_layout Standard
К достоинствам данной топологии можно отнести то, что сеть с данной топологией
 легко увеличить и легко её контролировать(поиск обрывов и неисправностей).
 Недостатками является то, что при выходе из строя родительского узла, выйдут
 из строя и все его дочерние узлы (выход из строя корня — выход из строя
 всей сети), и также ограничена пропускная способность (доступ к сети может
 быть затруднён).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Tree_topology.png

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Адресация сетей.
 MAC, IP.
 Классовая, безклассовая адресация.
 Нумерация узлов, сетей.
 Маска.
 
\end_layout

\begin_layout Standard
Виды глобальных адресов:
\end_layout

\begin_layout Itemize
IP-адрес;
\end_layout

\begin_layout Itemize
MAC-адрес (6F.1A.48.21.40.FE) — адрес сетевой карты; первые несколько бит — код
 производителя.
\end_layout

\begin_layout Standard
Для того чтобы в процессе обмена информацией компьютеры могли найти друг
 друга, в сетях существует единая система адресации, основанная на использовании
 
\series bold
IP-адреса
\series default
.
\end_layout

\begin_layout Standard
Каждый компьютер, подключенный к Интернету, имеет свой уникальный 32-битный
 IP-адрес.
\end_layout

\begin_layout Standard
Система IP-адресации учитывает структуру Интернета, то есть то, что Интернет
 является сетью сетей, а не объединением отдельных компьютеров.
 IP-адрес содержит адрес сети и адрес компьютера в данной сети.
\end_layout

\begin_layout Standard
Для обеспечения максимальной гибкости в процессе распределения IP-адресов,
 в зависимости от количества компьютеров в сети, адреса разделяются на классы
 А, В, С, D, E:
\end_layout

\begin_layout Standard
\begin_inset Formula $\begin{array}{cccc}
A & 0 & \text{адрес сети 7 бит} & \text{адрес узла 24 бит}\\
B & 10 & \text{адрес сети 14 бит} & \text{адрес узла 16 бит}\\
C & 110 & \text{адрес сети 21 бит} & \text{адрес узла 8 бит}\\
D & 1110 & \text{многоадресная } & \text{рассылка}\\
E & 1111 & \text{зарезервировано}
\end{array}$
\end_inset


\end_layout

\begin_layout Standard
Подобная адресация называется 
\series bold
классовой
\series default
.
\end_layout

\begin_layout Standard
Существует также 
\series bold
безклассовая
\series default
 адресация — метод IP-адресации, позволяющий гибко управлять пространством
 IP-адресов, не используя жёсткие рамки классовой адресации.
 Использование этого метода позволяет экономно использовать ограниченный
 ресурс IP-адресов, поскольку возможно применение различных масок подсетей
 к различным подсетям.
\end_layout

\begin_layout Standard

\series bold
Маска
\series default
 подсети — битовая маска, определяющая, какая часть IP-адреса узла сети
 относится к адресу сети, а какая — к адресу самого узла в этой сети (при
 этом, в отличие от IP-адреса, маска подсети не является частью IP-пакета).
 Например, узел с IP-адресом 12.34.56.78 и маской подсети 255.255.255.0 находится
 в сети 12.34.56.0 с длиной префикса 24 бита.
\end_layout

\begin_layout Section
Коммутация каналов и пакетов.
 Мультиплексирование, демультиплексирование.
\end_layout

\begin_layout Standard
Соединение с 
\series bold
коммутацией каналов
\series default
 — вид телекоммуникационной сети, в которой между двумя узлами сети должно
 быть установлено соединение (канал), прежде чем они начнут обмен информацией.
 Это соединение на протяжении всего сеанса обмена информацией может использовать
ся только указанными двумя узлами.
 После завершения обмена соединение должно быть соответствующим образом
 разорвано.
\end_layout

\begin_layout Standard

\series bold
Коммутация пакетов
\series default
 — способ доступа нескольких абонентов к общей сети, при котором информация
 разделяется на части небольшого размера (так называемые пакеты), которые
 передаются в сети независимо друг от друга.
 Узел-приёмник собирает сообщение из пакетов.
 В таких сетях по одной физической линии связи могут обмениваться данными
 много узлов.
\end_layout

\begin_layout Standard
В информационных технологиях и связи, 
\series bold
мультиплекси́рование
\series default
 — уплотнение канала, т.
 е.
 передача нескольких потоков (каналов) данных с меньшей скоростью (пропускной
 способностью) по одному каналу.
\end_layout

\begin_layout Itemize
Мультиплексирование с разделением по частоте предполагает размещение в пределах
 полосы пропускания канала нескольких каналов с меньшей шириной.
 Наглядным примером может послужить радиовещание, где в пределах одного
 канала (радиоэфира) размещено множество радиоканалов на разных частотах
 (в разных частотных полосах).
\end_layout

\begin_layout Itemize
Мультиплексирование с разделением по времени предполагает кадровую передачу
 данных, при этом переход с каналов меньшей ширины (пропускной способности)
 на каналы с большей освобождает резерв для передачи в пределах одного кадра
 большего объёма нескольких кадров меньшего.
\end_layout

\begin_layout Standard
Мультиплексирование по времени используется в сетях передачи данных, к примеру,
 в протоколе Ethernet.
\end_layout

\begin_layout Standard
Демультиплексирование — операция, обратная к мультиплексированию.
\end_layout

\begin_layout Section
Стандартизация сетей.
 Многоуровневые модели.
 
\end_layout

\begin_layout Standard
???
\end_layout

\begin_layout Section
Эталонная и стандартная модели OSI.
\end_layout

\begin_layout Standard
Описывает произвольные виды сетевого взаимодействия между различными узлами.
\end_layout

\begin_layout Standard
Эталонная модель OSI состоит из 7 уровней (от нижнего к верхнему):
\end_layout

\begin_layout Enumerate
Физический (Технологии ADSL, ISDN, ATM, RS-x, FDDI, );
\end_layout

\begin_layout Enumerate
Канальный (Технологии Ethernet, протокол PtPP);
\end_layout

\begin_layout Enumerate
Сетевой (Протокол IP);
\end_layout

\begin_layout Enumerate
Транспортный (TCP, UDP);
\end_layout

\begin_layout Enumerate
Сеансовый (POP);
\end_layout

\begin_layout Enumerate
Представительский (POP/SMTP, SNMP, Telnet, HTTP, FTP, DNS);
\end_layout

\begin_layout Enumerate
Прикладной (WEB, Email).
\end_layout

\begin_layout Standard
Стандартная модель же упрощена и включает в себя всего 4 уровня:
\end_layout

\begin_layout Enumerate
Физическо-канальный
\end_layout

\begin_layout Enumerate
Сетевой
\end_layout

\begin_layout Enumerate
Транспортно-сеансовый
\end_layout

\begin_layout Enumerate
Представительско-прикладной
\end_layout

\begin_layout Standard
Обработка и передача сообщений.
\end_layout

\begin_layout Standard
Имеется некоторое сообщение.
 При переходе на следующий (нижний) уровень перед ним записывают заголовок,
 который содержит IP-адреса отправителя и получателя, порты, информацию
 о протоколах, интерфейсах, типе сообщения и тому подобное.
 После сообщения добавляется концевик, который содержит служебную информацию
 для проверки правильности доставки сообщения (контрольные суммы).
 Для каждого уровня заголовки и концевики свои.
 Таким образом, физический уровень передает уже гораздо больший пакет.
 После передачи данных пакет проходит обратную 
\begin_inset Quotes fld
\end_inset

распаковку
\begin_inset Quotes frd
\end_inset

.
 Если целостность пакета нарушена, то то он будет отброшен.
\end_layout

\begin_layout Standard

\series bold
Порт
\series default
 — идентификатор ID процесса или приложения, для которого предназначается
 этот пакет.
\end_layout

\begin_layout Section
Уровни модели OSI.
\end_layout

\begin_layout Standard
Рассмотрим более подробно что делает каждый из уровней модели OSI.
\end_layout

\begin_layout Standard

\series bold
1) Физический.

\series default
 Физический уровень — нижний уровень модели, который определяет метод передачи
 данных, представленных в двоичном виде, от одного устройства (компьютера)
 к другому.
 Осуществляет передачу электрических или оптических сигналов в кабель или
 в радиоэфир и, соответственно, их приём и преобразование в биты данных
 в соответствии с методами кодирования цифровых сигналов.
 
\end_layout

\begin_layout Standard
На этом уровне также работают концентраторы, повторители сигнала и медиаконверте
ры.
\end_layout

\begin_layout Standard
Функции физического уровня реализуются на всех устройствах, подключенных
 к сети.
 Со стороны компьютера функции физического уровня выполняются сетевым адаптером
 или последовательным портом.
 К физическому уровню относятся физические, электрические и механические
 интерфейсы между двумя системами.
 Физический уровень определяет такие виды сред передачи данных как оптоволокно,
 витая пара, коаксиальный кабель, спутниковый канал передач данных и т.
 п.
 
\end_layout

\begin_layout Standard

\series bold
2) Канальный уровень
\series default
 предназначен для обеспечения взаимодействия сетей на физическом уровне
 и контроля за ошибками, которые могут возникнуть.
 Полученные с физического уровня данные, представленные в битах, он упаковывает
 в кадры, проверяет их на целостность и, если нужно, исправляет ошибки (формируе
т повторный запрос поврежденного кадра) и отправляет на сетевой уровень.
 Канальный уровень может взаимодействовать с одним или несколькими физическими
 уровнями, контролируя и управляя этим взаимодействием.
\end_layout

\begin_layout Standard
Спецификация IEEE 802 разделяет этот уровень на два подуровня: MAC (англ.
 media access control) регулирует доступ к разделяемой физической среде,
 LLC (англ.
 logical link control) обеспечивает обслуживание сетевого уровня.
\end_layout

\begin_layout Standard
На этом уровне работают коммутаторы, мосты и другие устройства.
 Эти устройства используют адресацию второго уровня (по номеру уровня в
 модели OSI).
\end_layout

\begin_layout Standard

\series bold
3) Сетевой уровень
\series default
 модели предназначен для определения пути передачи данных.
 Отвечает за трансляцию логических адресов и имён в физические, определение
 кратчайших маршрутов, коммутацию и маршрутизацию, отслеживание неполадок
 и «заторов» в сети.
\end_layout

\begin_layout Standard
Протоколы сетевого уровня маршрутизируют данные от источника к получателю.
 Работающие на этом уровне устройства (маршрутизаторы) условно называют
 устройствами третьего уровня (по номеру уровня в модели OSI).
\end_layout

\begin_layout Standard

\series bold
4) Транспортный уровень
\series default
 модели предназначен для обеспечения надёжной передачи данных от отправителя
 к получателю.
 Существует множество классов протоколов транспортного уровня, начиная от
 протоколов, предоставляющих только основные транспортные функции (например,
 функции передачи данных без подтверждения приема), и заканчивая протоколами,
 которые гарантируют доставку в пункт назначения нескольких пакетов данных
 в надлежащей последовательности, мультиплексируют несколько потоков данных,
 обеспечивают механизм управления потоками данных и гарантируют достоверность
 принятых данных.
 Например, UDP ограничивается контролем целостности данных в рамках одной
 датаграммы и не исключает возможности потери пакета целиком или дублирования
 пакетов, нарушение порядка получения пакетов данных; TCP обеспечивает надёжную
 непрерывную передачу данных, исключающую потерю данных или нарушение порядка
 их поступления или дублирования, может перераспределять данные, разбивая
 большие порции данных на фрагменты и наоборот, склеивая фрагменты в один
 пакет.
\end_layout

\begin_layout Standard

\series bold
5) Сеансовый уровень
\series default
 модели обеспечивает поддержание сеанса связи, позволяя приложениям взаимодейств
овать между собой длительное время.
 Уровень управляет созданием/завершением сеанса, обменом информацией, синхрониза
цией задач, определением права на передачу данных и поддержанием сеанса
 в периоды неактивности приложений.
\end_layout

\begin_layout Standard

\series bold
6) Представительский уровень
\series default
 обеспечивает преобразование протоколов и кодирование/декодирование данных.
 Запросы приложений, полученные с прикладного уровня, на уровне представления
 преобразуются в формат для передачи по сети, а полученные из сети данные
 преобразуются в формат приложений.
 На этом уровне может осуществляться сжатие/распаковка или шифрование/дешифрован
ие, а также перенаправление запросов другому сетевому ресурсу, если они
 не могут быть обработаны локально.
\end_layout

\begin_layout Standard

\series bold
7) Прикладной уровень
\series default
 — верхний уровень модели, обеспечивающий взаимодействие пользовательских
 приложений с сетью.
\end_layout

\begin_layout Section
Система доменных имен.
\end_layout

\begin_layout Standard
DNS (англ.
 Domain Name System — система доменных имён) — компьютерная распределённая
 система для получения информации о доменах.
 Чаще всего используется для получения IP-адреса по имени хоста (компьютера
 или устройства), получения информации о маршрутизации почты, обслуживающих
 узлах для протоколов в домене (SRV-запись).
\end_layout

\begin_layout Standard
Распределённая база данных DNS поддерживается с помощью иерархии DNS-серверов,
 взаимодействующих по определённому протоколу.
\end_layout

\begin_layout Standard
Основой DNS является представление об иерархической структуре доменного
 имени и зонах.
 Каждый сервер, отвечающий за имя, может делегировать ответственность за
 дальнейшую часть домена другому серверу (с административной точки зрения
 — другой организации или человеку), что позволяет возложить ответственность
 за актуальность информации на серверы различных организаций (людей), отвечающих
 только за «свою» часть доменного имени.
\end_layout

\begin_layout Standard
Система DNS содержит иерархию DNS-серверов, соответствующую иерархии зон.
 Каждая зона поддерживается как минимум одним авторитетным сервером DNS
 (от англ.
 authoritative — авторитетный), на котором расположена информация о домене.
\end_layout

\begin_layout Standard
Имя и IP-адрес не тождественны — один IP-адрес может иметь множество имён,
 что позволяет поддерживать на одном компьютере множество веб-сайтов (это
 называется виртуальный хостинг).
 Обратное тоже справедливо — одному имени может быть сопоставлено множество
 IP-адресов: это позволяет создавать балансировку нагрузки.
\end_layout

\begin_layout Standard
Для повышения устойчивости системы используется множество серверов, содержащих
 идентичную информацию, а в протоколе есть средства, позволяющие поддерживать
 синхронность информации, расположенной на разных серверах.
 Существует 13 корневых серверов, их адреса практически не изменяются.[1]
\end_layout

\begin_layout Standard
Протокол DNS использует для работы TCP- или UDP-порт 53 для ответов на запросы.
 Традиционно запросы и ответы отправляются в виде одной UDP-датаграммы.
 TCP используется, когда размер данных ответа превышает 512 байт, и для
 AXFR-запросов.
\end_layout

\begin_layout Section
Маршрутизация сетей.
 Статическая, динамическая.
\end_layout

\begin_layout Standard

\series bold
Маршрутизация
\series default
 (англ.
 Routing) — процесс определения маршрута следования информации в сетях связи.
\end_layout

\begin_layout Standard
Маршруты могут задаваться административно (статические маршруты), либо вычислять
ся с помощью алгоритмов маршрутизации, базируясь на информации о топологии
 и состоянии сети, полученной с помощью протоколов маршрутизации (динамические
 маршруты).
\end_layout

\begin_layout Standard

\series bold
1) Стати́ческая маршрутиза́ция
\series default
 - вид маршрутизации, при котором маршруты указываются в явном виде при
 конфигурации маршрутизатора.
 Вся маршрутизация при этом происходит без участия каких-либо протоколов
 маршрутизации.
\end_layout

\begin_layout Standard
При задании статического маршрута указывается:
\end_layout

\begin_layout Itemize
Адрес сети (на которую маршрутизируется трафик), маска сети 
\end_layout

\begin_layout Itemize
Адрес шлюза (узла), который способствует дальнейшей маршрутизации (или подключен
 к маршрутизируемой сети напрямую) 
\end_layout

\begin_layout Itemize
(опционально) метрика (иногда именуется также "ценой") маршрута.
 
\end_layout

\begin_layout Standard
При наличии нескольких маршрутов на одну и ту же сеть некоторые маршрутизаторы
 выбирают маршрут с минимальной метрикой.
\end_layout

\begin_layout Standard
Достоинства:
\end_layout

\begin_layout Itemize
Лёгкость отладки и конфигурирования в малых сетях.
 
\end_layout

\begin_layout Itemize
Отсутствие дополнительных накладных расходов (из-за отсутствия протоколов
 маршрутизации) 
\end_layout

\begin_layout Itemize
Мгновенная готовность (не требуется интервал для конфигурирования/подстройки)
 
\end_layout

\begin_layout Itemize
Низкая нагрузка на процессор маршрутизатора 
\end_layout

\begin_layout Itemize
Предсказуемость в каждый момент времени 
\end_layout

\begin_layout Standard
Недостатки:
\end_layout

\begin_layout Itemize
Очень плохое масштабирование 
\end_layout

\begin_layout Itemize
Низкая устойчивость.
 
\end_layout

\begin_layout Itemize
Отсутствие динамического балансирования нагрузки 
\end_layout

\begin_layout Standard

\series bold
1) Динамическая маршрутизация
\series default
 — вид маршрутизации, при котором таблица маршрутизации редактируется программно.
\end_layout

\begin_layout Standard
Динамическая маршрутизация оказывает дополнительную нагрузку на устройства,
 а высокая нестабильность сети может приводить к ситуациям, когда маршрутизаторы
 не успевают синхронизировать свои таблицы, что приводит к противоречивым
 сведениям о топологии сети в различных её частях и потере передаваемых
 данных.
\end_layout

\begin_layout Section
Электронная почта.
 Протоколы IMAP, Pop3, SMTP.
\end_layout

\begin_layout Standard

\series bold
Электро́нная по́чта
\series default
 — технология и служба по пересылке и получению электронных сообщений между
 пользователями компьютерной сети.
 
\end_layout

\begin_layout Standard
Основные компоненты электронной почты:
\end_layout

\begin_layout Enumerate
Почтовый клиент.
\end_layout

\begin_layout Enumerate
Почтовый сервер.
\end_layout

\begin_layout Standard

\series bold
Почтовые клиенты 
\series default
подразделяются на тонкие и толстые.
 Тонкие клиенты представляют собой веб-сайт либо API и позволяют управлять
 почтой используя окно браузера.
 Толстые клиенты — программы для компьютера, которые скачивают письма в
 локальное хранилище на компьютере и позволяют работать с ними в режиме
 оффлайн.
 Примерами почтовых клиентов могут служить Thunderbird, Outlook (Оутглюк),
 The Bat.
\end_layout

\begin_layout Standard

\series bold
Почтовые серверы
\series default
 — почтовая программа, которая передает сообщения от одного компьютера к
 другому.
 Функции: хранение, отправка и получение сообщений, организация очередей
 клиентов.
 
\end_layout

\begin_layout Standard
Обычно связка сервер-клиент состоит из следующих компонентов:
\end_layout

\begin_layout Itemize
MDA (агент проверки доставки сообщений)
\end_layout

\begin_layout Itemize
MTA (агент отправки сообщений)
\end_layout

\begin_layout Itemize
MUA (user-agent);
\end_layout

\begin_layout Standard
Примеры почтовых серверов:
\end_layout

\begin_layout Itemize
SendMail;
\end_layout

\begin_layout Itemize
qmail;
\end_layout

\begin_layout Itemize
MS Exchange Server;
\end_layout

\begin_layout Itemize
Postfix;
\end_layout

\begin_layout Itemize
Procmail/MailDrop;
\end_layout

\begin_layout Itemize
Exim.
\end_layout

\begin_layout Standard
Протоколы передачи почты.
\end_layout

\begin_layout Standard

\series bold
1) SMTP:
\end_layout

\begin_layout Standard
В качестве команд этого протокола используется ASCII-text.
 Для передачи данных используется протокол TCP.
 Стандартный порт протокола — 25.
\end_layout

\begin_layout Standard
Схема посылки почты состоит из 3-х этапов:
\end_layout

\begin_layout Standard
1) Приветствие;
\end_layout

\begin_layout Standard
2) Пересылка почты;
\end_layout

\begin_layout Standard
3) Закрытие сессии;
\end_layout

\begin_layout Standard
В процессе выполняются следующие команды:
\end_layout

\begin_layout Standard
MAIL FROM — устанавливает обратный адрес.
\end_layout

\begin_layout Standard
RCPT TO — устанавливает получателя данного сообщения.
\end_layout

\begin_layout Standard
DATA — для отправки сообщений.
\end_layout

\begin_layout Standard

\series bold
2) POP3
\end_layout

\begin_layout Standard
POP3 — стандартный интернет-протокол прикладного уровня, используемый клиентами
 электронной почты для получения почты с удаленного сервера по TCP/IP-соединению.
\end_layout

\begin_layout Standard
POP поддерживает простые требования «загрузи-и-удали» для доступа к удаленным
 почтовым ящикам.
 Хотя большая часть POP-клиентов предоставляет возможность оставить почту
 на сервере после загрузки, использующие POP клиенты обычно соединяются,
 извлекают все письма, сохраняют их на пользовательском компьютере как новые
 сообщения, удаляют их с сервера, после чего разъединяются.
\end_layout

\begin_layout Standard
POP3-сервер прослушивает общеизвестный порт 110.
\end_layout

\begin_layout Standard
Доступные сообщения клиента фиксируются при открытии почтового ящика POP-сессией
 и определяются количеством сообщений для сессии, или, по желанию, с помощью
 уникального идентификатора, присваиваемого сообщению POP-сервером.
 Этот уникальный идентификатор является постоянным и уникальным для почтового
 ящика и позволяет клиенту получить доступ к одному и тому же сообщению
 в разных POP-сессиях.
 Почта извлекается и помечается для удаления с помощью номера сообщения.
 При выходе клиента из сессии помеченные сообщения удаляются из почтового
 ящика.
\end_layout

\begin_layout Standard
Команды POP3:
\end_layout

\begin_layout Standard
USER — идентифицирует пользователя с указанным именем;
\end_layout

\begin_layout Standard
PASS — указывает пароль для пары клиент-сервер;
\end_layout

\begin_layout Standard
QUIT — закрывает TCP соединение;
\end_layout

\begin_layout Standard
STAT — возвращает число писем в на сервере;
\end_layout

\begin_layout Standard
LIST — запрашивает список сообщений;
\end_layout

\begin_layout Standard
RETR — извлекает сообщение с почтового ящика;
\end_layout

\begin_layout Standard
DELE — помечает сообщение на удаление;
\end_layout

\begin_layout Standard
NOOP (сам NOOB) — сервер возвращает положительный ответ, но не выполняет
 действий.
\end_layout

\begin_layout Standard
LAST — возвращает наибольший размер сообщения из всех, к которым обращались.
\end_layout

\begin_layout Standard
RSET — отменяет DELE.
\end_layout

\begin_layout Standard
Дополнительные (не входящие в базовую конфигурацию) команды:
\end_layout

\begin_layout Standard
APOP — передача на сервер username and password;
\end_layout

\begin_layout Standard
UIDL — перенумеровать все сообщения в рамках текущей сессии;
\end_layout

\begin_layout Standard

\series bold
3) IMAP:
\end_layout

\begin_layout Standard
IMAP — протокол прикладного уровня для доступа к электронной почте.
\end_layout

\begin_layout Standard
Базируется на транспортном протоколе TCP и использует порт 143.
\end_layout

\begin_layout Standard
IMAP предоставляет пользователю обширные возможности для работы с почтовыми
 ящиками, находящимися на центральном сервере.
 Почтовая программа, использующая этот протокол, получает доступ к хранилищу
 корреспонденции на сервере так, как будто эта корреспонденция расположена
 на компьютере получателя.
 Электронными письмами можно манипулировать с компьютера пользователя (клиента)
 без постоянной пересылки с сервера и обратно файлов с полным содержанием
 писем.
\end_layout

\begin_layout Standard

\series bold
Преимущества
\series default
 в сравнении с POP3: 
\end_layout

\begin_layout Standard
При использовании POP3 клиент подключается к серверу только на промежуток
 времени, необходимый для загрузки новых сообщений.
 При использовании IMAP соединение не разрывается, пока пользовательский
 интерфейс активен, а сообщения загружаются только по требованию клиента.
 Это позволяет уменьшить время отклика для пользователей, в чьих ящиках
 имеется много сообщений большого объёма.
\end_layout

\begin_layout Standard
Протокол POP требует, чтобы текущий клиент был единственным подключенным
 к ящику.
 IMAP позволяет одновременный доступ нескольких клиентов к ящику и предоставляет
 клиенту возможность отслеживать изменения, вносимые другими клиентами,
 подключенными одновременно с ним.
\end_layout

\begin_layout Standard
Благодаря системе флагов, определенной в IMAP4, клиент может отслеживать
 состояние сообщения (прочитано, отправлен ответ, удалено и т.
 д.); данные о флагах хранятся на сервере.
\end_layout

\begin_layout Section
Протокол передачи данных TCP, UDP.
\end_layout

\begin_layout Standard

\series bold
TCP
\series default
 — один из основных протоколов передачи данных интернета, предназначенный
 для управления передачей данных.
\end_layout

\begin_layout Standard
В стеке протоколов IP TCP выполняет функции протокола транспортного уровня
 модели OSI.
\end_layout

\begin_layout Standard
Механизм TCP предоставляет поток данных с предварительной установкой соединения,
 осуществляет повторный запрос данных в случае потери данных и устраняет
 дублирование при получении двух копий одного пакета, гарантируя тем самым,
 в отличие от UDP, целостность передаваемых данных и уведомление отправителя
 о результатах передачи.
\end_layout

\begin_layout Standard
Когда осуществляется передача от компьютера к компьютеру через Интернет,
 TCP работает на верхнем уровне между двумя конечными системами, например,
 браузером и веб-сервером.
 TCP осуществляет надежную передачу потока байтов от одной программы на
 некотором компьютере к другой программе на другом компьютере (например,
 программы для электронной почты, для обмена файлами).
 TCP контролирует длину сообщения, скорость обмена сообщениями, сетевой
 трафик.
\end_layout

\begin_layout Standard

\series bold
Пример:
\series default
 Отправитель запрашивает готовность получателя.
 Затем они устанавливают соединение.
 Затем происходит передача данных, причем если пакет не был принят, отправитель
 отправит его еще раз (и так до 16 раз).
 Затем сессия закрывается.
\end_layout

\begin_layout Standard
Структура пакета TCP изображена на рисунке 13.1.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/TCPHead.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
UDP
\series default
 — один из ключевых элементов TCP/IP, набора сетевых протоколов для Интернета.
 С UDP компьютерные приложения могут посылать сообщения (в данном случае
 называемые датаграммами) другим хостам по IP-сети без необходимости предварител
ьного сообщения для установки специальных каналов передачи или путей данных.
 Протокол был разработан Дэвидом П.
 Ридом в 1980 году и официально определён в RFC 768.
\end_layout

\begin_layout Standard
UDP использует простую модель передачи, без неявных «рукопожатий» для обеспечени
я надёжности, упорядочивания или целостности данных.
 Таким образом, UDP предоставляет ненадёжный сервис, и датаграммы могут
 прийти не по порядку, дублироваться или вовсе исчезнуть без следа.
 UDP подразумевает, что проверка ошибок и исправление либо не нужны, либо
 должны исполняться в приложении.
 Чувствительные ко времени приложения часто используют UDP, так как предпочтител
ьнее сбросить пакеты, чем ждать задержавшиеся пакеты, что может оказаться
 невозможным в системах реального времени.
 При необходимости исправления ошибок на сетевом уровне интерфейса приложение
 может задействовать TCP или SCTP, разработанные для этой цели.
\end_layout

\begin_layout Standard
Природа UDP как протокола без сохранения состояния также полезна для серверов,
 отвечающих на небольшие запросы от огромного числа клиентов, например DNS
 и потоковые мультимедийные приложения вроде IPTV, Voice over IP, протоколы
 туннелирования IP и многие онлайн-игры.
\end_layout

\begin_layout Standard
Структура UDP-пакета изображена на рис.
 13.2
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/UDPHead.png

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Протокол файловой передачи данных FTP, протокол HTTP.
\end_layout

\begin_layout Standard

\series bold
FTP
\series default
 — стандартный протокол, предназначенный для передачи файлов по TCP-сетям
 (например, Интернет).
 Использует 21-й порт.
 FTP часто используется для загрузки сетевых страниц и других документов
 с частного устройства разработки на открытые сервера хостинга.
\end_layout

\begin_layout Standard
Протокол построен на архитектуре «клиент-сервер» и использует разные сетевые
 соединения для передачи команд и данных между клиентом и сервером.
 Пользователи FTP могут пройти аутентификацию, передавая логин и пароль
 открытым текстом, или же, если это разрешено на сервере, они могут подключиться
 анонимно.
 Можно использовать протокол SSH для безопасной передачи, скрывающей (шифрующей)
 логин и пароль, а также шифрующей содержимое.
\end_layout

\begin_layout Standard
FTP является одним из старейших прикладных протоколов, появившимся задолго
 до HTTP, и даже до TCP/IP, в 1971 году.
 В первое время он работал поверх протокола NCP.
 Он и сегодня широко используется для распространения ПО и доступа к удалённым
 хостам.
\end_layout

\begin_layout Standard
Достаточно яркая особенность протокола FTP в том, что он использует множественно
е (как минимум — двойное) подключение.
 При этом один канал является управляющим, через который поступают команды
 серверу и возвращаются его ответы (обычно через TCP-порт 21), а через остальные
 происходит собственно передача данных, по одному каналу на каждую передачу.
 Поэтому в рамках одной сессии по протоколу FTP можно передавать одновременно
 несколько файлов, причём в обоих направлениях.
 Для каждого канала данных открывается свой TCP порт, номер которого выбирается
 либо сервером, либо клиентом, в зависимости от режима передачи.
\end_layout

\begin_layout Standard

\series bold
HTTP
\series default
 — протокол прикладного уровня передачи данных (изначально — в виде гипертекстов
ых документов в формате «HTML», в настоящий момент используется для передачи
 произвольных данных).
 Основой HTTP является технология «клиент-сервер», то есть предполагается
 существование:
\end_layout

\begin_layout Itemize
Потребителей (клиентов), которые инициируют соединение и посылают запрос;
 
\end_layout

\begin_layout Itemize
Поставщиков (серверов), которые ожидают соединения для получения запроса,
 производят необходимые действия и возвращают обратно сообщение с результатом.
 
\end_layout

\begin_layout Standard
Основным объектом манипуляции в HTTP является ресурс, на который указывает
 URI (Uniform Resource Identifier) в запросе клиента.
 Обычно такими ресурсами являются хранящиеся на сервере файлы, но ими могут
 быть логические объекты или что-то абстрактное.
 Особенностью протокола HTTP является возможность указать в запросе и ответе
 способ представления одного и того же ресурса по различным параметрам:
 формату, кодировке, языку и т.
 д.
 (в частности, для этого используется HTTP-заголовок).
 Именно благодаря возможности указанию способа кодирования сообщения, клиент
 и сервер могут обмениваться двоичными данными, хотя данный протокол является
 текстовым.
\end_layout

\begin_layout Standard
HTTP — протокол прикладного уровня; аналогичными ему являются FTP и SMTP.
 Обмен сообщениями идёт по обыкновенной схеме «запрос-ответ».
 Для идентификации ресурсов HTTP использует глобальные URI.
 В отличие от многих других протоколов, HTTP не сохраняет своего состояния.
 Это означает отсутствие сохранения промежуточного состояния между парами
 «запрос-ответ».
 Компоненты, использующие HTTP, могут самостоятельно осуществлять сохранение
 информации о состоянии, связанной с последними запросами и ответами (например,
 «куки» на стороне клиента, «сессии» на стороне сервера).
 Браузер, посылающий запросы, может отслеживать задержки ответов.
 Сервер может хранить IP-адреса и заголовки запросов последних клиентов.
 Однако сам протокол не осведомлён о предыдущих запросах и ответах, в нём
 не предусмотрена внутренняя поддержка состояния, к нему не предъявляются
 такие требования.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/HTTP⁄FTP.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Аспекты сетевой безопасности.
\end_layout

\begin_layout Standard

\series bold
Аспекты
\series default
:
\end_layout

\begin_layout Enumerate
Конфиденциальность;
\end_layout

\begin_layout Enumerate
Целостность данных;
\end_layout

\begin_layout Enumerate
Аутентификация;
\end_layout

\begin_layout Enumerate
Доступность.
\end_layout

\begin_layout Standard

\series bold
Конфиденциа́льность
\series default
 — необходимость предотвращения утечки (разглашения) какой-либо информации.
\end_layout

\begin_layout Standard

\series bold
Целостность информации
\series default
 — термин в информатике, означающий, что данные не были изменены при выполнении
 какой-либо операции над ними, будь то передача, хранение или отображение.
\end_layout

\begin_layout Standard
В криптографии и информационной безопасности целостность данных— это сохранение
 данных в том виде, в каком они были созданы.
 Для проверки целостности данных в криптографии используются хеш-функции,
 например, MD5.
 Хэш-функция преобразует последовательность байт произвольного размера в
 последовательность байт фиксированного размера (число).
 Если данные изменятся, то и число, генерируемое хеш-функцией, тоже изменится.
\end_layout

\begin_layout Standard

\series bold
Аутентифика́ция
\series default
 — процедура проверки подлинности, например:
\end_layout

\begin_layout Itemize
проверка подлинности пользователя путём сравнения введённого им пароля с
 паролем, сохранённым в базе данных пользователей; 
\end_layout

\begin_layout Itemize
подтверждение подлинности электронного письма путём проверки цифровой подписи
 письма по открытому ключу отправителя; 
\end_layout

\begin_layout Itemize
проверка контрольной суммы файла на соответствие сумме, заявленной автором
 этого файла.
 
\end_layout

\begin_layout Standard
Учитывая степень доверия и политику безопасности систем, проводимая проверка
 подлинности может быть односторонней или взаимной.
 Обычно она проводится с помощью криптографических способов.
\end_layout

\begin_layout Standard
Аутентификацию не следует путать с 
\series bold
авторизацией
\series default
 (процедурой предоставления субъекту определённых прав) и 
\series bold
идентификацией
\series default
 (процедурой распознавания субъекта по его идентификатору).
\end_layout

\begin_layout Standard

\series bold
Доступность
\series default
 — состояние информации (ресурсов автоматизированной информационной системы),
 при котором субъекты, имеющие права доступа, могут реализовывать их беспрепятст
венно.
 К правам доступа относятся: право на чтение, изменение, копирование, уничтожени
е информации, а также права на изменение, использование, уничтожение ресурсов
\end_layout

\begin_layout Section
Виды сетевых угроз.
\end_layout

\begin_layout Enumerate
Сниффинг — прослушка и анализ сетевого трафика.
\end_layout

\begin_layout Enumerate
Аутентификация:
\end_layout

\begin_deeper
\begin_layout Enumerate
Перехват пароля/ключа;
\end_layout

\begin_layout Enumerate
Подбор пароля (broot force).
\end_layout

\end_deeper
\begin_layout Enumerate
Недостаточная аутентификация.
 Данная уязвимость возникает тогда, когда веб‑сервер позволяет атакующему
 получать доступ к важной информации или функциям сервера без должной аутентифик
ации.
\end_layout

\begin_layout Enumerate
MitM — man-in-the-middle.
 
\end_layout

\begin_layout Enumerate
Лавинные атаки.
\end_layout

\begin_deeper
\begin_layout Enumerate
Недостаточное сопротивление автоматизации (атака ботов — DoS).
 Борьба — Captcha.
\end_layout

\begin_layout Enumerate
Распределенная лавинная атака (DDoS).
\end_layout

\begin_layout Enumerate
Флуд.
\end_layout

\end_deeper
\begin_layout Enumerate
Вирусы, сетевые черви, трояны.
\end_layout

\begin_layout Enumerate
Сетевая разведка.
\end_layout

\begin_deeper
\begin_layout Enumerate
Скан портов
\end_layout

\begin_layout Enumerate
Заметание следов
\end_layout

\begin_layout Enumerate
Инъекции SQL, PHP
\end_layout

\begin_layout Enumerate
Переполнение буфера
\end_layout

\begin_layout Enumerate
Атака на функции форматирования строк
\end_layout

\end_deeper
\begin_layout Enumerate
Выполнение команд операционной системы.
\end_layout

\begin_layout Standard
Защита:
\end_layout

\begin_layout Enumerate
Сигнатурный (качественный анализ трафика)
\end_layout

\begin_layout Enumerate
Статистический.
\end_layout

\begin_layout Enumerate
Гибридный.
\end_layout

\begin_layout Standard
Защита от вирусов:
\end_layout

\begin_layout Enumerate
Антивирус.
\end_layout

\begin_layout Enumerate
Компьютерная гигиена (мойте компьютер перед выходом в интернет, дети).
\end_layout

\begin_layout Enumerate
Виртуальная машина (или любая другая песочница).
\end_layout

\begin_layout Enumerate
Не подключаться к сети, залить все порты эпоксидкой и выковырять дисковод
\end_layout

\begin_layout Enumerate
Не-windows.
\end_layout

\begin_layout Enumerate
Admin/user.
\end_layout

\begin_layout Section
Брандмауэры.
 Их виды.
\end_layout

\begin_layout Standard
Брандмауэр — защита, которая стоит между глобальной и локальной сетью.
\end_layout

\begin_layout Standard
Бывают
\end_layout

\begin_layout Enumerate
Аппаратными
\end_layout

\begin_layout Enumerate
Программными
\end_layout

\begin_layout Standard
Типы:
\end_layout

\begin_layout Enumerate
Брандмауэр с фильтрацией пакетов.
\end_layout

\begin_deeper
\begin_layout Standard
Сетевой уровень.
 Проверяет адрес отправителя и адрес получателя, информацию о приложении
 или протоколе.
 Вдобавок следит за портами отправителя и получателя.
\end_layout

\begin_layout Enumerate
Плюсы:
\end_layout

\begin_deeper
\begin_layout Enumerate
Недорогой или просто поставляется вместе с антивирусом
\end_layout

\begin_layout Enumerate
Неплохая скорость.
\end_layout

\end_deeper
\begin_layout Enumerate
Минусы:
\end_layout

\begin_deeper
\begin_layout Enumerate
Слабая защита.
\end_layout

\begin_layout Enumerate
Требуется труЪ настройка.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Шлюз сеансового уровня.
\end_layout

\begin_deeper
\begin_layout Standard
Работает на сеансовом уровне.
 Следит за квинтированием сеанса связи (логикой пакетов).
\end_layout

\begin_layout Enumerate
Канальные посредники: pipe proxy.
\end_layout

\begin_layout Enumerate
Аппаратные посредники: proxy server.
\end_layout

\begin_deeper
\begin_layout Enumerate
Плюсы:
\end_layout

\begin_deeper
\begin_layout Enumerate
Надежная защита.
\end_layout

\end_deeper
\begin_layout Enumerate
Минусы:
\end_layout

\begin_deeper
\begin_layout Enumerate
Скорость меньше.
\end_layout

\begin_layout Enumerate
Стоит дороже.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Enumerate
Шлюз прикладного уровня.
\end_layout

\begin_deeper
\begin_layout Standard
Этот парниша работает на прикладном уровне.
 Он может смотреть в пакет, а значит, его можно настроить на фильтрацию
 определенных команд, в частности, фильтрацию в том числе и служебной или
 полезной информации.
 Существуют так называемые посредники прикладного уровня, которые работают
 каждый с определенными службами (разные посредники для Telnet и FTP, к
 примеру).
 Также этот шлюз занимается проблемами аутентификации.
\end_layout

\begin_layout Enumerate
Плюсы:
\end_layout

\begin_deeper
\begin_layout Enumerate
Надежная защита.
\end_layout

\end_deeper
\begin_layout Enumerate
Минусы:
\end_layout

\begin_deeper
\begin_layout Enumerate
Большая стоимость
\end_layout

\begin_layout Enumerate
Малая скорость работы
\end_layout

\begin_layout Enumerate
Прозрачность.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Брандмауэр экспертного уровня.
\end_layout

\begin_deeper
\begin_layout Standard
А этот чувак вообще крутой и объединяет функции предыдущих брандмауэров.
 Работает напрямую с опреационной системой, отслеживает сеансы связи, предоставл
яет посредников, фильтрует.
\end_layout

\begin_layout Enumerate
Плюсы:
\end_layout

\begin_deeper
\begin_layout Enumerate
Максимальная надежность.
\end_layout

\end_deeper
\begin_layout Enumerate
Минусы:
\end_layout

\begin_deeper
\begin_layout Enumerate
Максимальная стоимость.
\end_layout

\begin_layout Enumerate
Средняя скорость.
\end_layout

\begin_layout Enumerate
Средняя прозрачность.
\end_layout

\end_deeper
\end_deeper
\begin_layout Section
Пиринговые сети.
\end_layout

\begin_layout Standard
Однора́нговая, децентрализо́ванная или пи́ринговая сеть — это оверлейная
 (то есть являющаяся надстройкой над другой сетью) компьютерная сеть, основанная
 на равноправии участников.
 Часто в такой сети отсутствуют выделенные серверы, а каждый узел (peer)
 является как клиентом, так и выполняет функции сервера.
 В отличие от архитектуры клиент-сервера, такая организация позволяет сохранять
 работоспособность сети при любом количестве и любом сочетании доступных
 узлов.
 Участниками сети являются пиры.
\end_layout

\begin_layout Standard

\series bold
Устройство: 
\series default
В сети присутствует некоторое количество машин, при этом каждая может связаться
 с любой из других.
 Каждая из этих машин может посылать запросы другим машинам на предоставление
 каких-либо ресурсов в пределах этой сети и, таким образом, выступать в
 роли клиента.
 Будучи сервером, каждая машина должна быть способной обрабатывать запросы
 от других машин в сети, отсылать то, что было запрошено.
 Каждая машина также должна выполнять некоторые вспомогательные и административн
ые функции (например, хранить список других известных машин-«соседей» и
 поддерживать его актуальность).
\end_layout

\begin_layout Standard
Любой член данной сети не гарантирует своё присутствие на постоянной основе.
 Он может появляться и исчезать в любой момент времени.
 Но при достижении определённого критического размера сети наступает такой
 момент, что в сети одновременно существует множество серверов с одинаковыми
 функциями.
\end_layout

\begin_layout Standard
Одна из областей применения технологии одноранговых сетей — это обмен файлами.
 Пользователи файлообменной сети выкладывают какие-либо файлы в т.
 н.
 «расшаренную» директорию, содержимое которой доступно для скачивания другим
 пользователям.
 Какой-нибудь другой пользователь сети посылает запрос на поиск какого-либо
 файла.
 Программа ищет у клиентов сети файлы, соответствующие запросу, и показывает
 результат.
 После этого пользователь может скачать файлы у найденных источников.
 В современных файлообменных сетях информация загружается сразу с нескольких
 источников.
 Её целостность проверяется по контрольным суммам.
 (Если кто не понял - это торренты).
\end_layout

\begin_layout Section
Технология xDSL.
\end_layout

\begin_layout Standard
хDSL (англ.
 digital subscriber line, цифровая абонентская линия) — семейство технологий,
 позволяющих значительно повысить пропускную способность абонентской линии
 телефонной сети общего пользования путём использования эффективных линейных
 кодов и адаптивных методов коррекции искажений линии на основе современных
 достижений микроэлектроники и методов цифровой обработки сигнала.
\end_layout

\begin_layout Standard
Технологии хDSL появились в середине 90-х годов как альтернатива цифровому
 абонентскому окончанию ISDN.
\end_layout

\begin_layout Standard
В аббревиатуре xDSL символ «х» используется для обозначения первого символа
 в названии конкретной технологии, а DSL обозначает цифровую абонентскую
 линию DSL (англ.
 Digital Subscriber Line — цифровая абонентская линия).
 Технологии хDSL позволяют передавать данные со скоростями, значительно
 превышающими те скорости, которые доступны даже лучшим аналоговым и цифровым
 модемам.
 Эти технологии поддерживают передачу голоса, высокоскоростную передачу
 данных и видеосигналов, создавая при этом значительные преимущества как
 для абонентов, так и для провайдеров.
 Многие технологии хDSL позволяют совмещать высокоскоростную передачу данных
 и передачу голоса по одной и той же медной паре.
 Существующие типы технологий хDSL различаются в основном по используемой
 форме модуляции и скорости передачи данных.
\end_layout

\begin_layout Standard
Службы xDSL разрабатывались для достижения определенных целей: они должны
 работать на существующих телефонных линиях, они не должны мешать работе
 различной аппаратуры абонента, такой как телефонный аппарат, факс и т.
 д., скорость работы должна быть выше теоретического предела в 55 Кбит/сек.,
 и наконец, они должны обеспечивать постоянное подключение.
 Широкое распространение технологий хDSL должно сопровождаться некоторой
 перестройкой работы поставщиков услуг Интернета и поставщиков услуг телефонных
 сетей, так как их оборудование теперь должно работать совместно.
\end_layout

\begin_layout Standard
К основным типам xDSL относятся ADSL, HDSL, IDSL, MSDSL, PDSL, RADSL, SDSL,
 SHDSL, UADSL, VDSL.
 Все эти технологии обеспечивают высокоскоростной цифровой доступ по абонентской
 телефонной линии.
 Некоторые технологии xDSL являются оригинальными разработками, другие представл
яют собой просто теоретические модели, в то время как третьи уже стали широко
 используемыми стандартами.
 Основным различием данных технологий являются методы модуляции, используемые
 для кодирования данных.
\end_layout

\begin_layout Section
Протокол DHCP.
\end_layout

\begin_layout Standard
DHCP (англ.
 Dynamic Host Configuration Protocol — протокол динамической настройки узла)
 — сетевой протокол, позволяющий компьютерам автоматически получать IP-адрес
 и другие параметры, необходимые для работы в сети TCP/IP.
 Данный протокол работает по модели «клиент-сервер».
 Для автоматической конфигурации компьютер-клиент на этапе конфигурации
 сетевого устройства обращается к так называемому серверу DHCP и получает
 от него нужные параметры.
 Сетевой администратор может задать диапазон адресов, распределяемых сервером
 среди компьютеров.
 Это позволяет избежать ручной настройки компьютеров сети и уменьшает количество
 ошибок.
 Протокол DHCP используется в большинстве сетей TCP/IP.
\end_layout

\begin_layout Standard
Протокол DHCP предоставляет три способа распределения IP-адресов:
\end_layout

\begin_layout Itemize
Ручное распределение.
 При этом способе сетевой администратор сопоставляет аппаратному адресу
 (для Ethernet сетей это MAC-адрес) каждого клиентского компьютера определённый
 IP-адрес.
 Фактически, данный способ распределения адресов отличается от ручной настройки
 каждого компьютера лишь тем, что сведения об адресах хранятся централизованно
 (на сервере DHCP), и потому их проще изменять при необходимости.
 
\end_layout

\begin_layout Itemize
Автоматическое распределение.
 При данном способе каждому компьютеру на постоянное использование выделяется
 произвольный свободный IP-адрес из определённого администратором диапазона.
 
\end_layout

\begin_layout Itemize
Динамическое распределение.
 Этот способ аналогичен автоматическому распределению, за исключением того,
 что адрес выдаётся компьютеру не на постоянное пользование, а на определённый
 срок.
 Это называется арендой адреса.
 По истечении срока аренды IP-адрес вновь считается свободным, и клиент
 обязан запросить новый (он, впрочем, может оказаться тем же самым).
 Кроме того, клиент сам может отказаться от полученного адреса.
\end_layout

\begin_layout Section
IP-телефония.
\end_layout

\begin_layout Standard
IP-телефони́я — телефонная связь по протоколу IP.
 Под IP-телефонией подразумевается набор коммуникационных протоколов, технологий
 и методов, обеспечивающих традиционные для телефонии набор номера, дозвон
 и двустороннее голосовое общение, а также видеообщение по сети Интернет
 или любым другим IP-сетям.
 Сигнал по каналу связи передаётся в цифровом виде и, как правило, перед
 передачей преобразовывается (сжимается) с тем, чтобы удалить избыток информации
 и снизить нагрузку на сеть передачи данных.
\end_layout

\begin_layout Standard
IP-телефония является приложением более общей технологии VoIP (англ.
 Voice over IP) для организации двустороннего общения.
 Технология VoIP в общем случае подразумевает все варианты передачи голоса
 через IP, в том числе не имеющие никакого отношения к телефонии и общению
 людей.
 Например, технология VoIP применяется для передачи звука в системах IP-видеонаб
людения, в системах оповещения, при трансляции вебинаров, при просмотре
 фильмов в режиме онлайн и т.
 п.
\end_layout

\begin_layout Standard
IP-телефония реализует задачи и решения, которые с помощью технологии телефонной
 сети общего пользования реализовать будет труднее, либо дороже.
\end_layout

\begin_layout Standard
Возможность передавать более одного телефонного звонка в рамках высокоскоростног
о телефонного подключения.
 Поэтому IP-телефония используется в качестве простого способа для добавления
 дополнительной телефонной линии дома или в офисе.
 Свойства, такие как 
\end_layout

\begin_layout Itemize
конференция, 
\end_layout

\begin_layout Itemize
переадресация звонка, 
\end_layout

\begin_layout Itemize
автоматическое повторение номера, 
\end_layout

\begin_layout Itemize
определение номера звонящего, 
\end_layout

\begin_layout Standard
предоставляются бесплатно, тогда как в традиционных телекоммуникационных
 компаниях обычно выставляются в счёт.
\end_layout

\begin_layout Itemize
Безопасные звонки, со стандартизованным протоколом (такие как SRTP).
 Большинство трудностей для включения безопасных телефонных соединений по
 традиционным телефонным линиям, такие как оцифровка сигнала, передача цифрового
 сигнала, уже решены в рамках IP-телефонии.
 Необходимо лишь произвести шифрование сигнала и его идентификацию для существую
щего потока данных.
 
\end_layout

\begin_layout Itemize
Независимость от месторасположения.
 Нужно только интернет-соединение для подключения к провайдеру IP-телефонии.
 Например, операторы центра звонков с помощью IP-телефонов могут работать
 из любого офиса, где есть в наличии эффективное быстрое и стабильное интернет-п
одключение.
 
\end_layout

\begin_layout Itemize
Доступна интеграция с другими сервисами через интернет, включая видеозвонок,
 обмен сообщениями и данными во время разговора, аудиоконференции, управление
 адресной книгой и получение информации о том, доступны ли для звонка другие
 абоненты.
 
\end_layout

\begin_layout Itemize
Дополнительные телефонные свойства — такие как маршрутизация звонка, всплывающие
 окна, альтернативный GSM-роуминг и внедрение IVR — легче и дешевле внедрить
 и интегрировать.
 Тот факт, что телефонный звонок находится в той же самой сети передачи
 данных, что и персональный компьютер пользователя, открывает путь ко многим
 новым возможностям.
\end_layout

\begin_layout Section
Виды сетевых устройств.
 Их особенности и отличия.
\end_layout

\begin_layout Standard
Устройства, подключенные к какому-либо сегменту сети, называют сетевыми
 устройствами.
 Их принято подразделять на 2 группы:
\end_layout

\begin_layout Standard

\series bold
Устройства пользователя
\series default
.
 В эту группу входят компьютеры, принтеры, сканеры и другие устройства,
 которые выполняют функции, необходимые непосредственно пользователю сети;
 
\end_layout

\begin_layout Standard

\series bold
Сетевые устройства.

\series default
 Эти устройства позволяют осуществлять связь с другими сетевыми устройствами
 или устройствами конечного пользователя.
 В сети они выполняют специфические функции.
 
\end_layout

\begin_layout Standard

\series bold
Типы сетевых устройств
\end_layout

\begin_layout Standard

\series bold
1) Сетевые карты
\end_layout

\begin_layout Standard
Устройства, которые связывают конечного пользователя с сетью, называются
 также оконечными узлами или станциями (host).
 Примером таких устройств является обычный персональный компьютер или рабочая
 станция.
 Для работы в сети каждый хост оснащен платой сетевого интерфейса (Network
 Interface Card — NIC), также называемой сетевым адаптером.
 Как правило, такие устройства могут функционировать и без компьютерной
 сети.
\end_layout

\begin_layout Standard

\series bold
2) Повторители
\series default
 (repeater) представляют собой сетевые устройства, функционирующие на первом
 (физическом) уровне эталонной модели OSI.
 Для того чтобы понять работу повторителя, необходимо знать, что по мере
 того, как данные покидают устройство отправителя и выходят в сеть, они
 преобразуются в электрические или световые импульсы, которые после этого
 передаются по сетевой передающей среде.
 Такие импульсы называются сигналами (signals).
 Когда сигналы покидают передающую станцию, они являются четкими и легко
 распознаваемыми.
 Однако чем больше длина кабеля, тем более слабым и менее различимым становится
 сигнал по мере прохождения по сетевой передающей среде.
 Целью использования повторителя является регенерация и ресинхронизация
 сетевых сигналов на битовом уровне, что позволяет передавать их по среде
 на большее расстояние.
 Термин повторитель (repeater) первоначально означал отдельный порт ‘‘на
 входе’’ некоторого устройства и отдельный порт на его ‘‘выходе’’.
 В настоящее время используются также повторители с несколькими портами.
 В эталонной модели OSI повторители классифицируются как устройства первого
 уровня, поскольку они функционируют только на битовом уровне и не просматривают
 другую содержащуюся в пакете информацию.
\end_layout

\begin_layout Standard

\series bold
3) Концентратор
\series default
 — это один из видов сетевых устройств, которые можно устанавливать на уровне
 доступа сети Ethernet.
 На концентраторах есть несколько портов для подключения узлов к сети.
 Концентраторы — это простые устройства, не оборудованные необходимыми электронн
ыми компонентами для передачи сообщений между узлами в сети.
 Концентратор не в состоянии определить, какому узлу предназначено конкретное
 сообщение.
 Он просто принимает электронные сигналы одного порта и воспроизводит (или
 ретранслирует) то же сообщение для всех остальных портов.
\end_layout

\begin_layout Standard
Для отправки и получения сообщений все порты концентратора Ethernet подключаются
 к одному и тому же каналу.
 Концентратор называется устройством с общей полосой пропускания, поскольку
 все узлы в нем работают на одной полосе одного канала.
\end_layout

\begin_layout Standard
Концентраторы и повторители имеют похожие характеристики, поэтому концентраторы
 часто называют многопортовыми повторителями (multiport repeater).
 Разница между повторителем и концентратором состоит лишь в количестве кабелей,
 подсоединенных к устройству.
 В то время как повторитель имеет только два порта, концентратор обычно
 имеет от 4 до 20 и более портов.
\end_layout

\begin_layout Standard

\series bold
4) Мост (bridge)
\series default
 представляет собой устройство второго уровня, предназначенное для создания
 двух или более сегментов локальной сети LAN, каждый из которых является
 отдельным коллизионным доменом.
 Иными словами, мосты предназначены для более рационального использования
 полосы пропускания.
 Целью моста является фильтрация потоков данных в LAN-сети с тем, чтобы
 локализовать внутрисегментную передачу данных и вместе с тем сохранить
 возможность связи с другими частями (сегментами) LAN-сети для перенаправления
 туда потоков данных.
 Каждое сетевое устройство имеет связанный с NIC-картой уникальный MAC-адрес.
 Мост собирает информацию о том, на какой его стороне (порте) находится
 конкретный MAC-адрес, и принимает решение о пересылке данных на основании
 соответствующего списка MAC-адресов.
 Мосты осуществляют фильтрацию потоков данных на основе только MAC-адресов
 узлов.
 По этой причине они могут быстро пересылать данные любых протоколов сетевого
 уровня.
 На решение о пересылке не влияет тип используемого протокола сетевого уровня,
 вследствие этого мосты принимают решение только о том, пересылать или не
 пересылать фрейм, и это решение основывается лишь на MAC-адресе получателя.
\end_layout

\begin_layout Standard

\series bold
5) Коммутаторы 
\series default
используют те же концепции и этапы работы, которые характерны для мостов.
 В самом простом случае коммутатор можно назвать многопортовым мостом, но
 в некоторых случаях такое упрощение неправомерно.
\end_layout

\begin_layout Standard
Коммутатор Ethernet используется на уровне доступа.
 Как и концентратор, коммутатор соединяет несколько узлов с сетью.
 В отличие от концентратора, коммутатор в состоянии передать сообщение конкретно
му узлу.
 Когда узел отправляет сообщение другому узлу через коммутатор, тот принимает
 и декодирует кадры и считывает физический (MAC) адрес сообщения.
\end_layout

\begin_layout Standard

\series bold
6) Маршрутизаторы
\series default
 (router) представляют собой устройства объединенных сетей, которые пересылают
 пакеты между сетями на основе адресов третьего уровня.
 Маршрутизаторы способны выбирать наилучший путь в сети для передаваемых
 данных.
 Функционируя на третьем уровне, маршрутизатор может принимать решения на
 основе сетевых адресов вместо использования индивидуальных MAC-адресов
 второго уровня.
 Маршрутизаторы также способны соединять между собой сети с различными технологи
ями второго уровня, такими, как Ethernet, Token Ring и Fiber Distributed
 Data Interface (FDDI — распределенный интерфейс передачи данных по волоконно»оп
тическим каналам).
 Обычно маршрутизаторы также соединяют между собой сети, использующие технологию
 асинхронной передачи данных ATM (Asynchronous Transfer Mode — ATM) и последоват
ельные соединения.
 Вследствие своей способности пересылать пакеты на основе информации третьего
 уровня, маршрутизаторы стали основной магистралью глобальной сети Internet
 и используют протокол IP.
\end_layout

\end_body
\end_document
